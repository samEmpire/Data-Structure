

//stack implementation using static array
#include <stdio.h>
#define CAPACITY 5 //pre-processor macro
int stack[CAPACITY];
int top=-1;
int main()
{
    int choice;
    while(1)
    {
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Peek\n");
        printf("4.Traverse\n");
        printf("5.Quit\n");
        
        printf("Enter your choice :");
        scanf("%d",&choice);
        
        switch(choice)
        {
            case 1 : push();
                     break;
            case 2 : pop();
                     break;
            case 3 : peek();
                     break;
            case 4 : traverse();
                     break;
            case 5 : exit(0);
                     break;
            default :printf("Invalid input\n");
        }
    }
    
    
}
int isFull(){
    if (top==CAPACITY-1){
        return 1;
    }
    else{
        return 0;
    }
}
int isEmpty(){
    if (top==-1){
        return 1;
    }
    else{
        return 0;
    }
}
void push(){
    int element;
    printf("Enter a value to push\n");
    scanf("%d",&element);
    if (isFull()){
        printf("Stack is full !\n");
    }
    else{
        top++;
        stack[top]=element;
        printf("%d has pushed  !\n",element);
    }
}
int pop(){
    int element;
    if (isEmpty()){
        return 1;
    }
    else{
        element=stack[top];
        top--;
        printf("%d has popped\n",element);
    }
}
int peek(){
    int element;
    if (isEmpty()){
        return 1;
    }
    else{
        printf("%d is the top value\n",stack[top]);
    }
}
int traverse()

{
    int i;
    if(isEmpty()){
        printf("No element in stack\n");
    }
    else{
        for(i=0;i<=top;i++){
            printf("%d\t",stack[i]);
        }
    }
}


